---
import { type CollectionEntry, getCollection, render } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import FormattedDate from "@components/FormattedDate.astro";
import { readingTime } from "@lib/utils";
import BackToPrevious from "@components/BackToPrevious.astro";
import Link from "@components/Link.astro";
import TableOfContents from "@components/TableOfContents.astro";

export async function getStaticPaths() {
  const personal = (await getCollection("personal"))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  return personal.map((personal) => ({
    params: { id: personal.id },
    props: personal,
  }));
}
type Props = CollectionEntry<"personal">;

const personal = Astro.props;
const { Content, headings } = await render(personal);
---

<Layout title={personal.data.title} description={personal.data.description}>
  <Container>
    <div class="animate">
      <BackToPrevious href="/personal">Back to personal</BackToPrevious>
    </div>
    <div class="animate my-10 space-y-1">
      <div class="flex items-center gap-1.5">
        <div class="font-base text-sm">
          <FormattedDate date={personal.data.date} />
        </div>
        &bull;
        {personal.body && (
          <div class="font-base text-sm">
            {readingTime(personal.body)}
          </div>
        )}     
      </div>
      <h1 class="text-3xl font-semibold text-black dark:text-white">
        {personal.data.title}
      </h1>
      {
        (personal.data.demoURL || personal.data.repoURL) && (
          <nav class="flex gap-1">
            {personal.data.demoURL && (
              <Link href={personal.data.demoURL} external>
                demo
              </Link>
            )}
            {personal.data.demoURL && personal.data.repoURL && <span>/</span>}
            {personal.data.repoURL && (
              <Link href={personal.data.repoURL} external>
                repo
              </Link>
            )}
          </nav>
        )
      }
    </div>
    <TableOfContents headings={headings} />
    <article class="animate">
      <Content />
    </article>
  </Container>
</Layout>
